
                                 Object Hints
==============================================================================

# ----------------------------------------------------------------------------
#                                                                            -
#  Created by Fonic <https://github.com/fonic>                               -
#  Date: 06/20/19 - 07/25/23                                                 -
#                                                                            -
# ----------------------------------------------------------------------------

Object 1:
# Auto-generated using 'mk2_generate_hints.sh'
# All of these functions are 'call'ed (which implicitely pushes the return
# address, i.e. offset after 'call' instruction, onto the stack). The functions
# then pop the return address and use it to access the data located right after
# the 'call' instructions)
100) offset = 00002242H, length = 00000004H, type = data, mode = dwords, comment = Referenced by IF_NOT_BOSS_BRANCH
101) offset = 00010118H, length = 00000004H, type = data, mode = dwords, comment = Referenced by IF_BOSS_BRANCH
102) offset = 000104BAH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
103) offset = 00010C0BH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
104) offset = 00010C27H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
105) offset = 00010D0CH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
106) offset = 00010D8CH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
107) offset = 00010DA8H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
108) offset = 00010E27H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
109) offset = 00010EDFH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
110) offset = 00010F13H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
111) offset = 00010FE2H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
112) offset = 00011083H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
113) offset = 000110D3H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
114) offset = 000111DCH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
115) offset = 000111F8H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
116) offset = 00011214H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
117) offset = 00011230H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
118) offset = 0001124CH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
119) offset = 000112CCH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
120) offset = 000114EAH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
121) offset = 000115C4H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
122) offset = 00011681H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
123) offset = 000116D2H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
124) offset = 00011730H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
125) offset = 000117B2H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
126) offset = 00011825H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
127) offset = 00011841H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
128) offset = 00011891H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
129) offset = 000118CDH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
130) offset = 00011901H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
131) offset = 000119DDH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
132) offset = 000119F9H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
133) offset = 00011A15H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
134) offset = 00011A7CH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
135) offset = 00011AC2H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
136) offset = 00011C12H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
137) offset = 00011CD2H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
138) offset = 00011D3EH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
139) offset = 00011D73H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
140) offset = 00011FABH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
141) offset = 00011FC7H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
142) offset = 000120D8H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
143) offset = 000120F4H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
144) offset = 0001A398H, length = 00000004H, type = data, mode = dwords, comment = Referenced by IF_NOT_BOSS_BRANCH
145) offset = 0001BD3CH, length = 00000004H, type = data, mode = dwords, comment = Referenced by IF_BOSS_BRANCH
146) offset = 0001BDEAH, length = 00000004H, type = data, mode = dwords, comment = Referenced by IF_BOSS_BRANCH
147) offset = 0001CBF1H, length = 00000004H, type = data, mode = dwords, comment = Referenced by IF_NOT_BOSS_BRANCH
148) offset = 0003A045H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
149) offset = 0003A152H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
150) offset = 0003A1AFH, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
151) offset = 0003A228H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
152) offset = 0003A988H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
153) offset = 0003A9A4H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
154) offset = 0003AA78H, length = 00000008H, type = data, mode = dwords, comment = Referenced by REACT_JUMP_TABLE
# Manually added
200) offset = 0000F92CH, length = 00000008H, type = data, mode = dwords, comment = Referenced by DRONE_BACKFLIP_branch_18 (offset 0x122f6)
201) start = 00010A0BH, end = 00010A4FH, type = data, mode = dwords, comment = Jump table (see offset 0x10986)
202) start = 0001780FH, end = 00017F11H, type = data, mode = bytes, comment = Lookup table for combos (?)
203) start = 0001F744H, end = 0001FC08H, type = data, mode = dwords, comment = Whole module 'stance.mk2' likely data (?)
204) start = 00024E14H, end = 0002DC5CH, type = data, mode = bytes, comment = Whole module 'allpals.mk2' likely data (?)
205) offset = 0003A919H, length = 0000000CH, type = data, mode = dwords, comment = DWORDS, unsure where used (?)
206) offset = 0003CD6EH, length = 0000006BH, type = data, mode = string, comment = Watcom copyright notice
207) offset = 0003CDD9H, length = 00000003H, type = code, mode = default, comment = Unreachable 'lea' instruction (?)
208) offset = 0003CDDCH, length = 00000004H, type = data, mode = dwords, comment = Stray reference to '@obj1:___begtext' (?)
209) offset = 0003CDE0H, length = 00000004H, type = data, mode = string, comment = String (see offset 0x3cfff)
210) start = 0003D041H, end = 0003D043H, type = data, mode = words, comment = WORDS
211) offset = 0003F456H, length = 00000025H, type = data, mode = string, comment = Alphabet (ASCII characters 0-9 + a-z)
212) offset = 0003F4F2H, length = 00000025H, type = data, mode = string, comment = Alphabet (ASCII characters 0-9 + a-z)
213) offset = 0003FE03H, length = 00000030H, type = data, mode = dwords, comment = Jump table for signals/interrupts (see offset 0x3fe55)
214) start = 000405EBH, end = 00041000H, type = data, mode = bytes, comment = Trailing emptiness

Object 2:
# Manually added
200) offset = 00000004H, length = 00000240H, type = data, mode = strings, comment = Strings
201) offset = 00000244H, length = 00000940H, type = data, mode = strings, comment = Strings
202) offset = 00000DBCH, length = 00000009H, type = data, mode = string, comment = String
203) offset = 00013AC8H, length = 00000023H, type = data, mode = bytes, comment = Sub-addressed string
204) start = 0002D8AFH, end = 0002D9E7H, type = data, mode = strings, comment = List of strings for keyboard keys
205) start = 0002F165H, end = 0002F1FBH, type = data, mode = bytes, comment = Default highscore table; structure: 3 chars initials, 1 byte wins, 1 byte wins, 0, 4 bytes score (?)
#206) start = 00033162H, end = 00034164H, type = data, mode = strings, comment = Noise table (string[8] + two dwords) (?)
206) start = 00033162H, end = 00034162H, type = data, mode = struct:chars[8]:bytes[8], comment = Noise table (string[8] + bytes[8]) (?)
207) start = 0003417CH, end = 0003419EH, type = data, mode = string, comment = String
208) start = 0003419EH, end = 000341B6H, type = data, mode = string, comment = String
209) start = 000341B6H, end = 000341C6H, type = data, mode = string, comment = String
210) start = 000341C6H, end = 000341D1H, type = data, mode = string, comment = String
# Code in data object
# -> just a stub, there are many more
# -> may be removed once this has been automated using tracing disassembler
211) start = 0001D97DH, end = 0001D991H, type = code, mode = default, comment = Code (?)
212) start = 0001D991H, end = 0001D9A5H, type = code, mode = default, comment = Code (?)
213) start = 0001D9A5H, end = 0001D9DBH, type = code, mode = default, comment = Code (?)
214) start = 0001D9DBH, end = 0001DA54H, type = code, mode = default, comment = Code (?)
#...
